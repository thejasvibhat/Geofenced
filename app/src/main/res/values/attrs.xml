<?xml version="1.0" encoding="utf-8"?>
<resources>

    <declare-styleable name="ExpandableTextView">
        <attr name="trimLength" format="integer" />
    </declare-styleable>
    <declare-styleable name="SlidingUpPanelLayout">
        <attr name="panelHeight" format="dimension" />
        <attr name="shadowHeight" format="dimension" />
        <attr name="paralaxOffset" format="dimension" />
        <attr name="fadeColor" format="color" />
        <attr name="flingVelocity" format="integer" />
        <attr name="dragView" format="reference" />
        <attr name="overlay" format="boolean" />
        <attr name="anchorPoint" format="float" />
        <attr name="initialState" format="enum">
            <enum name="expanded" value="0" />
            <enum name="collapsed" value="1" />
            <enum name="anchored" value="2" />
            <enum name="hidden" value="3" />
        </attr>
    </declare-styleable>
    <declare-styleable name="ButteryProgressBar">
        <attr name="barColor" format="color" />
        <attr name="barHeight" format="dimension" />
        <attr name="detentWidth" format="dimension" />
    </declare-styleable>
    <declare-styleable name="PagerSlidingTabStrip">
        <attr name="pstsIndicatorColor" format="color" />
        <attr name="pstsUnderlineColor" format="color" />
        <attr name="pstsDividerColor" format="color" />
        <attr name="pstsIndicatorHeight" format="dimension" />
        <attr name="pstsUnderlineHeight" format="dimension" />
        <attr name="pstsDividerPadding" format="dimension" />
        <attr name="pstsTabPaddingLeftRight" format="dimension" />
        <attr name="pstsScrollOffset" format="dimension" />
        <attr name="pstsTabBackground" format="reference" />
        <attr name="pstsShouldExpand" format="boolean" />
        <attr name="pstsTextAllCaps" format="boolean" />
    </declare-styleable>

    <!--
         Specifies how to place the content of an object, both
         on the x- and y-axis, within the object itself.
    -->
    <attr name="gravity">

        <!-- Push object to the top of its container, not changing its size. -->
        <flag name="top" value="0x30" />
        <!-- Push object to the bottom of its container, not changing its size. -->
        <flag name="bottom" value="0x50" />
        <!-- Push object to the left of its container, not changing its size. -->
        <flag name="left" value="0x03" />
        <!-- Push object to the right of its container, not changing its size. -->
        <flag name="right" value="0x05" />
        <!-- Place object in the vertical center of its container, not changing its size. -->
        <flag name="center_vertical" value="0x10" />
        <!-- Grow the vertical size of the object if needed so it completely fills its container. -->
        <flag name="fill_vertical" value="0x70" />
        <!-- Place object in the horizontal center of its container, not changing its size. -->
        <flag name="center_horizontal" value="0x01" />
        <!-- Grow the horizontal size of the object if needed so it completely fills its container. -->
        <flag name="fill_horizontal" value="0x07" />
        <!-- Place the object in the center of its container in both the vertical and horizontal axis, not changing its size. -->
        <flag name="center" value="0x11" />
        <!-- Grow the horizontal and vertical size of the object if needed so it completely fills its container. -->
        <flag name="fill" value="0x77" />
        <!--
             Additional option that can be set to have the top and/or bottom edges of
             the child clipped to its container's bounds.
             The clip will be based on the vertical gravity: a top gravity will clip the bottom
             edge, a bottom gravity will clip the top edge, and neither will clip both edges.
        -->
        <flag name="clip_vertical" value="0x80" />
        <!--
             Additional option that can be set to have the left and/or right edges of
             the child clipped to its container's bounds.
             The clip will be based on the horizontal gravity: a left gravity will clip the right
             edge, a right gravity will clip the left edge, and neither will clip both edges.
        -->
        <flag name="clip_horizontal" value="0x08" />
    </attr>
    <!-- Default GridView style. -->
    <attr name="gridViewStyle" format="reference" />

    <declare-styleable name="TypefacedTextView">
        <attr name="customTextviewFont" format="string" />
    </declare-styleable>

    <attr name="arc_origin">

        <!-- Value same as the android:gravity -->
        <flag name="top" value="0x30" />
        <flag name="bottom" value="0x50" />
        <flag name="left" value="0x03" />
        <flag name="right" value="0x05" />
        <flag name="center_vertical" value="0x10" />
        <flag name="center_horizontal" value="0x01" />
        <flag name="center" value="0x11" />
        <flag name="start" value="0x00800003" />
        <flag name="end" value="0x00800005" />
    </attr>

    <declare-styleable name="arc_ArcLayout">
        <attr name="arc_origin" />
        <attr name="arc_color" format="color" />
        <attr name="arc_radius" format="dimension" />
        <attr name="arc_axisRadius" format="dimension" />
        <attr name="arc_freeAngle" format="boolean" />
        <attr name="arc_reverseAngle" format="boolean" />
    </declare-styleable>
    <declare-styleable name="arc_ArcLayout_Layout">
        <attr name="arc_origin" />
        <attr name="arc_angle" format="float" />
    </declare-styleable>

</resources>